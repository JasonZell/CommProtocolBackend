// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoPackets.proto

#ifndef PROTOBUF_ProtoPackets_2eproto__INCLUDED
#define PROTOBUF_ProtoPackets_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_ProtoPackets_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[19];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsAirVehicleGroundRelativeStateImpl();
void InitDefaultsAirVehicleGroundRelativeState();
void InitDefaultsArmCommandImpl();
void InitDefaultsArmCommand();
void InitDefaultsArmPositionImpl();
void InitDefaultsArmPosition();
void InitDefaultsBatteryImpl();
void InitDefaultsBattery();
void InitDefaultsTargetAcknowledgementImpl();
void InitDefaultsTargetAcknowledgement();
void InitDefaultsTargetDesignationCommandImpl();
void InitDefaultsTargetDesignationCommand();
void InitDefaultsTargetStatusImpl();
void InitDefaultsTargetStatus();
void InitDefaultsVehicleAttitudeImpl();
void InitDefaultsVehicleAttitude();
void InitDefaultsVehicleAuthorizationReplyImpl();
void InitDefaultsVehicleAuthorizationReply();
void InitDefaultsVehicleAuthorizationRequestImpl();
void InitDefaultsVehicleAuthorizationRequest();
void InitDefaultsVehicleBodySensedStateImpl();
void InitDefaultsVehicleBodySensedState();
void InitDefaultsVehicleGlobalPositionImpl();
void InitDefaultsVehicleGlobalPosition();
void InitDefaultsVehicleIdentificationImpl();
void InitDefaultsVehicleIdentification();
void InitDefaultsVehicleInertialStateImpl();
void InitDefaultsVehicleInertialState();
void InitDefaultsVehicleModeCommandImpl();
void InitDefaultsVehicleModeCommand();
void InitDefaultsVehicleSystemStatusImpl();
void InitDefaultsVehicleSystemStatus();
void InitDefaultsVehicleTelemetryCommandImpl();
void InitDefaultsVehicleTelemetryCommand();
void InitDefaultsVehicleTerminationCommandImpl();
void InitDefaultsVehicleTerminationCommand();
void InitDefaultsVehicleWaypointCommandImpl();
void InitDefaultsVehicleWaypointCommand();
inline void InitDefaults() {
  InitDefaultsAirVehicleGroundRelativeState();
  InitDefaultsArmCommand();
  InitDefaultsArmPosition();
  InitDefaultsBattery();
  InitDefaultsTargetAcknowledgement();
  InitDefaultsTargetDesignationCommand();
  InitDefaultsTargetStatus();
  InitDefaultsVehicleAttitude();
  InitDefaultsVehicleAuthorizationReply();
  InitDefaultsVehicleAuthorizationRequest();
  InitDefaultsVehicleBodySensedState();
  InitDefaultsVehicleGlobalPosition();
  InitDefaultsVehicleIdentification();
  InitDefaultsVehicleInertialState();
  InitDefaultsVehicleModeCommand();
  InitDefaultsVehicleSystemStatus();
  InitDefaultsVehicleTelemetryCommand();
  InitDefaultsVehicleTerminationCommand();
  InitDefaultsVehicleWaypointCommand();
}
}  // namespace protobuf_ProtoPackets_2eproto
class AirVehicleGroundRelativeState;
class AirVehicleGroundRelativeStateDefaultTypeInternal;
extern AirVehicleGroundRelativeStateDefaultTypeInternal _AirVehicleGroundRelativeState_default_instance_;
class ArmCommand;
class ArmCommandDefaultTypeInternal;
extern ArmCommandDefaultTypeInternal _ArmCommand_default_instance_;
class ArmPosition;
class ArmPositionDefaultTypeInternal;
extern ArmPositionDefaultTypeInternal _ArmPosition_default_instance_;
class Battery;
class BatteryDefaultTypeInternal;
extern BatteryDefaultTypeInternal _Battery_default_instance_;
class TargetAcknowledgement;
class TargetAcknowledgementDefaultTypeInternal;
extern TargetAcknowledgementDefaultTypeInternal _TargetAcknowledgement_default_instance_;
class TargetDesignationCommand;
class TargetDesignationCommandDefaultTypeInternal;
extern TargetDesignationCommandDefaultTypeInternal _TargetDesignationCommand_default_instance_;
class TargetStatus;
class TargetStatusDefaultTypeInternal;
extern TargetStatusDefaultTypeInternal _TargetStatus_default_instance_;
class VehicleAttitude;
class VehicleAttitudeDefaultTypeInternal;
extern VehicleAttitudeDefaultTypeInternal _VehicleAttitude_default_instance_;
class VehicleAuthorizationReply;
class VehicleAuthorizationReplyDefaultTypeInternal;
extern VehicleAuthorizationReplyDefaultTypeInternal _VehicleAuthorizationReply_default_instance_;
class VehicleAuthorizationRequest;
class VehicleAuthorizationRequestDefaultTypeInternal;
extern VehicleAuthorizationRequestDefaultTypeInternal _VehicleAuthorizationRequest_default_instance_;
class VehicleBodySensedState;
class VehicleBodySensedStateDefaultTypeInternal;
extern VehicleBodySensedStateDefaultTypeInternal _VehicleBodySensedState_default_instance_;
class VehicleGlobalPosition;
class VehicleGlobalPositionDefaultTypeInternal;
extern VehicleGlobalPositionDefaultTypeInternal _VehicleGlobalPosition_default_instance_;
class VehicleIdentification;
class VehicleIdentificationDefaultTypeInternal;
extern VehicleIdentificationDefaultTypeInternal _VehicleIdentification_default_instance_;
class VehicleInertialState;
class VehicleInertialStateDefaultTypeInternal;
extern VehicleInertialStateDefaultTypeInternal _VehicleInertialState_default_instance_;
class VehicleModeCommand;
class VehicleModeCommandDefaultTypeInternal;
extern VehicleModeCommandDefaultTypeInternal _VehicleModeCommand_default_instance_;
class VehicleSystemStatus;
class VehicleSystemStatusDefaultTypeInternal;
extern VehicleSystemStatusDefaultTypeInternal _VehicleSystemStatus_default_instance_;
class VehicleTelemetryCommand;
class VehicleTelemetryCommandDefaultTypeInternal;
extern VehicleTelemetryCommandDefaultTypeInternal _VehicleTelemetryCommand_default_instance_;
class VehicleTerminationCommand;
class VehicleTerminationCommandDefaultTypeInternal;
extern VehicleTerminationCommandDefaultTypeInternal _VehicleTerminationCommand_default_instance_;
class VehicleWaypointCommand;
class VehicleWaypointCommandDefaultTypeInternal;
extern VehicleWaypointCommandDefaultTypeInternal _VehicleWaypointCommand_default_instance_;

// ===================================================================

class AirVehicleGroundRelativeState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AirVehicleGroundRelativeState) */ {
 public:
  AirVehicleGroundRelativeState();
  virtual ~AirVehicleGroundRelativeState();

  AirVehicleGroundRelativeState(const AirVehicleGroundRelativeState& from);

  inline AirVehicleGroundRelativeState& operator=(const AirVehicleGroundRelativeState& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AirVehicleGroundRelativeState(AirVehicleGroundRelativeState&& from) noexcept
    : AirVehicleGroundRelativeState() {
    *this = ::std::move(from);
  }

  inline AirVehicleGroundRelativeState& operator=(AirVehicleGroundRelativeState&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AirVehicleGroundRelativeState& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AirVehicleGroundRelativeState* internal_default_instance() {
    return reinterpret_cast<const AirVehicleGroundRelativeState*>(
               &_AirVehicleGroundRelativeState_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(AirVehicleGroundRelativeState* other);
  friend void swap(AirVehicleGroundRelativeState& a, AirVehicleGroundRelativeState& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AirVehicleGroundRelativeState* New() const PROTOBUF_FINAL { return New(NULL); }

  AirVehicleGroundRelativeState* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AirVehicleGroundRelativeState& from);
  void MergeFrom(const AirVehicleGroundRelativeState& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AirVehicleGroundRelativeState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 vehicle_id = 1;
  void clear_vehicle_id();
  static const int kVehicleIdFieldNumber = 1;
  ::google::protobuf::uint32 vehicle_id() const;
  void set_vehicle_id(::google::protobuf::uint32 value);

  // float angle_of_attack = 2;
  void clear_angle_of_attack();
  static const int kAngleOfAttackFieldNumber = 2;
  float angle_of_attack() const;
  void set_angle_of_attack(float value);

  // float angle_of_sideslip = 3;
  void clear_angle_of_sideslip();
  static const int kAngleOfSideslipFieldNumber = 3;
  float angle_of_sideslip() const;
  void set_angle_of_sideslip(float value);

  // float true_airspeed = 4;
  void clear_true_airspeed();
  static const int kTrueAirspeedFieldNumber = 4;
  float true_airspeed() const;
  void set_true_airspeed(float value);

  // float indicated_airspeed = 5;
  void clear_indicated_airspeed();
  static const int kIndicatedAirspeedFieldNumber = 5;
  float indicated_airspeed() const;
  void set_indicated_airspeed(float value);

  // float north_wind_speed = 6;
  void clear_north_wind_speed();
  static const int kNorthWindSpeedFieldNumber = 6;
  float north_wind_speed() const;
  void set_north_wind_speed(float value);

  // float east_wind_speed = 7;
  void clear_east_wind_speed();
  static const int kEastWindSpeedFieldNumber = 7;
  float east_wind_speed() const;
  void set_east_wind_speed(float value);

  // float north_ground_speed = 8;
  void clear_north_ground_speed();
  static const int kNorthGroundSpeedFieldNumber = 8;
  float north_ground_speed() const;
  void set_north_ground_speed(float value);

  // float east_ground_speed = 9;
  void clear_east_ground_speed();
  static const int kEastGroundSpeedFieldNumber = 9;
  float east_ground_speed() const;
  void set_east_ground_speed(float value);

  // float barometric_pressure = 10;
  void clear_barometric_pressure();
  static const int kBarometricPressureFieldNumber = 10;
  float barometric_pressure() const;
  void set_barometric_pressure(float value);

  // float barometric_altitude = 11;
  void clear_barometric_altitude();
  static const int kBarometricAltitudeFieldNumber = 11;
  float barometric_altitude() const;
  void set_barometric_altitude(float value);

  // @@protoc_insertion_point(class_scope:AirVehicleGroundRelativeState)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 vehicle_id_;
  float angle_of_attack_;
  float angle_of_sideslip_;
  float true_airspeed_;
  float indicated_airspeed_;
  float north_wind_speed_;
  float east_wind_speed_;
  float north_ground_speed_;
  float east_ground_speed_;
  float barometric_pressure_;
  float barometric_altitude_;
  mutable int _cached_size_;
  friend struct ::protobuf_ProtoPackets_2eproto::TableStruct;
  friend void ::protobuf_ProtoPackets_2eproto::InitDefaultsAirVehicleGroundRelativeStateImpl();
};
// -------------------------------------------------------------------

class ArmCommand : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ArmCommand) */ {
 public:
  ArmCommand();
  virtual ~ArmCommand();

  ArmCommand(const ArmCommand& from);

  inline ArmCommand& operator=(const ArmCommand& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ArmCommand(ArmCommand&& from) noexcept
    : ArmCommand() {
    *this = ::std::move(from);
  }

  inline ArmCommand& operator=(ArmCommand&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ArmCommand& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ArmCommand* internal_default_instance() {
    return reinterpret_cast<const ArmCommand*>(
               &_ArmCommand_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(ArmCommand* other);
  friend void swap(ArmCommand& a, ArmCommand& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ArmCommand* New() const PROTOBUF_FINAL { return New(NULL); }

  ArmCommand* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ArmCommand& from);
  void MergeFrom(const ArmCommand& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ArmCommand* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // int32 position = 2;
  void clear_position();
  static const int kPositionFieldNumber = 2;
  ::google::protobuf::int32 position() const;
  void set_position(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ArmCommand)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::int32 position_;
  mutable int _cached_size_;
  friend struct ::protobuf_ProtoPackets_2eproto::TableStruct;
  friend void ::protobuf_ProtoPackets_2eproto::InitDefaultsArmCommandImpl();
};
// -------------------------------------------------------------------

class ArmPosition : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ArmPosition) */ {
 public:
  ArmPosition();
  virtual ~ArmPosition();

  ArmPosition(const ArmPosition& from);

  inline ArmPosition& operator=(const ArmPosition& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ArmPosition(ArmPosition&& from) noexcept
    : ArmPosition() {
    *this = ::std::move(from);
  }

  inline ArmPosition& operator=(ArmPosition&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ArmPosition& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ArmPosition* internal_default_instance() {
    return reinterpret_cast<const ArmPosition*>(
               &_ArmPosition_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(ArmPosition* other);
  friend void swap(ArmPosition& a, ArmPosition& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ArmPosition* New() const PROTOBUF_FINAL { return New(NULL); }

  ArmPosition* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ArmPosition& from);
  void MergeFrom(const ArmPosition& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ArmPosition* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 position1 = 1;
  void clear_position1();
  static const int kPosition1FieldNumber = 1;
  ::google::protobuf::int32 position1() const;
  void set_position1(::google::protobuf::int32 value);

  // int32 position2 = 2;
  void clear_position2();
  static const int kPosition2FieldNumber = 2;
  ::google::protobuf::int32 position2() const;
  void set_position2(::google::protobuf::int32 value);

  // int32 position3 = 3;
  void clear_position3();
  static const int kPosition3FieldNumber = 3;
  ::google::protobuf::int32 position3() const;
  void set_position3(::google::protobuf::int32 value);

  // int32 position4 = 4;
  void clear_position4();
  static const int kPosition4FieldNumber = 4;
  ::google::protobuf::int32 position4() const;
  void set_position4(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ArmPosition)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 position1_;
  ::google::protobuf::int32 position2_;
  ::google::protobuf::int32 position3_;
  ::google::protobuf::int32 position4_;
  mutable int _cached_size_;
  friend struct ::protobuf_ProtoPackets_2eproto::TableStruct;
  friend void ::protobuf_ProtoPackets_2eproto::InitDefaultsArmPositionImpl();
};
// -------------------------------------------------------------------

class Battery : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Battery) */ {
 public:
  Battery();
  virtual ~Battery();

  Battery(const Battery& from);

  inline Battery& operator=(const Battery& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Battery(Battery&& from) noexcept
    : Battery() {
    *this = ::std::move(from);
  }

  inline Battery& operator=(Battery&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Battery& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Battery* internal_default_instance() {
    return reinterpret_cast<const Battery*>(
               &_Battery_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(Battery* other);
  friend void swap(Battery& a, Battery& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Battery* New() const PROTOBUF_FINAL { return New(NULL); }

  Battery* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Battery& from);
  void MergeFrom(const Battery& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Battery* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 batteryPercentage = 1;
  void clear_batterypercentage();
  static const int kBatteryPercentageFieldNumber = 1;
  ::google::protobuf::uint32 batterypercentage() const;
  void set_batterypercentage(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Battery)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 batterypercentage_;
  mutable int _cached_size_;
  friend struct ::protobuf_ProtoPackets_2eproto::TableStruct;
  friend void ::protobuf_ProtoPackets_2eproto::InitDefaultsBatteryImpl();
};
// -------------------------------------------------------------------

class TargetAcknowledgement : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TargetAcknowledgement) */ {
 public:
  TargetAcknowledgement();
  virtual ~TargetAcknowledgement();

  TargetAcknowledgement(const TargetAcknowledgement& from);

  inline TargetAcknowledgement& operator=(const TargetAcknowledgement& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TargetAcknowledgement(TargetAcknowledgement&& from) noexcept
    : TargetAcknowledgement() {
    *this = ::std::move(from);
  }

  inline TargetAcknowledgement& operator=(TargetAcknowledgement&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TargetAcknowledgement& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TargetAcknowledgement* internal_default_instance() {
    return reinterpret_cast<const TargetAcknowledgement*>(
               &_TargetAcknowledgement_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(TargetAcknowledgement* other);
  friend void swap(TargetAcknowledgement& a, TargetAcknowledgement& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TargetAcknowledgement* New() const PROTOBUF_FINAL { return New(NULL); }

  TargetAcknowledgement* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TargetAcknowledgement& from);
  void MergeFrom(const TargetAcknowledgement& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TargetAcknowledgement* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 target_status = 1;
  void clear_target_status();
  static const int kTargetStatusFieldNumber = 1;
  ::google::protobuf::uint32 target_status() const;
  void set_target_status(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TargetAcknowledgement)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 target_status_;
  mutable int _cached_size_;
  friend struct ::protobuf_ProtoPackets_2eproto::TableStruct;
  friend void ::protobuf_ProtoPackets_2eproto::InitDefaultsTargetAcknowledgementImpl();
};
// -------------------------------------------------------------------

class TargetDesignationCommand : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TargetDesignationCommand) */ {
 public:
  TargetDesignationCommand();
  virtual ~TargetDesignationCommand();

  TargetDesignationCommand(const TargetDesignationCommand& from);

  inline TargetDesignationCommand& operator=(const TargetDesignationCommand& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TargetDesignationCommand(TargetDesignationCommand&& from) noexcept
    : TargetDesignationCommand() {
    *this = ::std::move(from);
  }

  inline TargetDesignationCommand& operator=(TargetDesignationCommand&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TargetDesignationCommand& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TargetDesignationCommand* internal_default_instance() {
    return reinterpret_cast<const TargetDesignationCommand*>(
               &_TargetDesignationCommand_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(TargetDesignationCommand* other);
  friend void swap(TargetDesignationCommand& a, TargetDesignationCommand& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TargetDesignationCommand* New() const PROTOBUF_FINAL { return New(NULL); }

  TargetDesignationCommand* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TargetDesignationCommand& from);
  void MergeFrom(const TargetDesignationCommand& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TargetDesignationCommand* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 vehicle_id = 1;
  void clear_vehicle_id();
  static const int kVehicleIdFieldNumber = 1;
  ::google::protobuf::uint32 vehicle_id() const;
  void set_vehicle_id(::google::protobuf::uint32 value);

  // uint32 payload_id = 2;
  void clear_payload_id();
  static const int kPayloadIdFieldNumber = 2;
  ::google::protobuf::uint32 payload_id() const;
  void set_payload_id(::google::protobuf::uint32 value);

  // uint32 target_id = 3;
  void clear_target_id();
  static const int kTargetIdFieldNumber = 3;
  ::google::protobuf::uint32 target_id() const;
  void set_target_id(::google::protobuf::uint32 value);

  // uint32 target_type = 4;
  void clear_target_type();
  static const int kTargetTypeFieldNumber = 4;
  ::google::protobuf::uint32 target_type() const;
  void set_target_type(::google::protobuf::uint32 value);

  // float longitude = 5;
  void clear_longitude();
  static const int kLongitudeFieldNumber = 5;
  float longitude() const;
  void set_longitude(float value);

  // float latitude = 6;
  void clear_latitude();
  static const int kLatitudeFieldNumber = 6;
  float latitude() const;
  void set_latitude(float value);

  // float altitude = 7;
  void clear_altitude();
  static const int kAltitudeFieldNumber = 7;
  float altitude() const;
  void set_altitude(float value);

  // @@protoc_insertion_point(class_scope:TargetDesignationCommand)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 vehicle_id_;
  ::google::protobuf::uint32 payload_id_;
  ::google::protobuf::uint32 target_id_;
  ::google::protobuf::uint32 target_type_;
  float longitude_;
  float latitude_;
  float altitude_;
  mutable int _cached_size_;
  friend struct ::protobuf_ProtoPackets_2eproto::TableStruct;
  friend void ::protobuf_ProtoPackets_2eproto::InitDefaultsTargetDesignationCommandImpl();
};
// -------------------------------------------------------------------

class TargetStatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TargetStatus) */ {
 public:
  TargetStatus();
  virtual ~TargetStatus();

  TargetStatus(const TargetStatus& from);

  inline TargetStatus& operator=(const TargetStatus& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TargetStatus(TargetStatus&& from) noexcept
    : TargetStatus() {
    *this = ::std::move(from);
  }

  inline TargetStatus& operator=(TargetStatus&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TargetStatus& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TargetStatus* internal_default_instance() {
    return reinterpret_cast<const TargetStatus*>(
               &_TargetStatus_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(TargetStatus* other);
  friend void swap(TargetStatus& a, TargetStatus& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TargetStatus* New() const PROTOBUF_FINAL { return New(NULL); }

  TargetStatus* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TargetStatus& from);
  void MergeFrom(const TargetStatus& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TargetStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double target_radius = 1;
  void clear_target_radius();
  static const int kTargetRadiusFieldNumber = 1;
  double target_radius() const;
  void set_target_radius(double value);

  // double target_angle = 2;
  void clear_target_angle();
  static const int kTargetAngleFieldNumber = 2;
  double target_angle() const;
  void set_target_angle(double value);

  // double target_altitude = 3;
  void clear_target_altitude();
  static const int kTargetAltitudeFieldNumber = 3;
  double target_altitude() const;
  void set_target_altitude(double value);

  // @@protoc_insertion_point(class_scope:TargetStatus)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double target_radius_;
  double target_angle_;
  double target_altitude_;
  mutable int _cached_size_;
  friend struct ::protobuf_ProtoPackets_2eproto::TableStruct;
  friend void ::protobuf_ProtoPackets_2eproto::InitDefaultsTargetStatusImpl();
};
// -------------------------------------------------------------------

class VehicleAttitude : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:VehicleAttitude) */ {
 public:
  VehicleAttitude();
  virtual ~VehicleAttitude();

  VehicleAttitude(const VehicleAttitude& from);

  inline VehicleAttitude& operator=(const VehicleAttitude& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VehicleAttitude(VehicleAttitude&& from) noexcept
    : VehicleAttitude() {
    *this = ::std::move(from);
  }

  inline VehicleAttitude& operator=(VehicleAttitude&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VehicleAttitude& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VehicleAttitude* internal_default_instance() {
    return reinterpret_cast<const VehicleAttitude*>(
               &_VehicleAttitude_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(VehicleAttitude* other);
  friend void swap(VehicleAttitude& a, VehicleAttitude& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VehicleAttitude* New() const PROTOBUF_FINAL { return New(NULL); }

  VehicleAttitude* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VehicleAttitude& from);
  void MergeFrom(const VehicleAttitude& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VehicleAttitude* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 vehicle_id = 1;
  void clear_vehicle_id();
  static const int kVehicleIdFieldNumber = 1;
  ::google::protobuf::uint32 vehicle_id() const;
  void set_vehicle_id(::google::protobuf::uint32 value);

  // float roll = 2;
  void clear_roll();
  static const int kRollFieldNumber = 2;
  float roll() const;
  void set_roll(float value);

  // float pitch = 3;
  void clear_pitch();
  static const int kPitchFieldNumber = 3;
  float pitch() const;
  void set_pitch(float value);

  // float yaw = 4;
  void clear_yaw();
  static const int kYawFieldNumber = 4;
  float yaw() const;
  void set_yaw(float value);

  // @@protoc_insertion_point(class_scope:VehicleAttitude)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 vehicle_id_;
  float roll_;
  float pitch_;
  float yaw_;
  mutable int _cached_size_;
  friend struct ::protobuf_ProtoPackets_2eproto::TableStruct;
  friend void ::protobuf_ProtoPackets_2eproto::InitDefaultsVehicleAttitudeImpl();
};
// -------------------------------------------------------------------

class VehicleAuthorizationReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:VehicleAuthorizationReply) */ {
 public:
  VehicleAuthorizationReply();
  virtual ~VehicleAuthorizationReply();

  VehicleAuthorizationReply(const VehicleAuthorizationReply& from);

  inline VehicleAuthorizationReply& operator=(const VehicleAuthorizationReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VehicleAuthorizationReply(VehicleAuthorizationReply&& from) noexcept
    : VehicleAuthorizationReply() {
    *this = ::std::move(from);
  }

  inline VehicleAuthorizationReply& operator=(VehicleAuthorizationReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VehicleAuthorizationReply& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VehicleAuthorizationReply* internal_default_instance() {
    return reinterpret_cast<const VehicleAuthorizationReply*>(
               &_VehicleAuthorizationReply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(VehicleAuthorizationReply* other);
  friend void swap(VehicleAuthorizationReply& a, VehicleAuthorizationReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VehicleAuthorizationReply* New() const PROTOBUF_FINAL { return New(NULL); }

  VehicleAuthorizationReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VehicleAuthorizationReply& from);
  void MergeFrom(const VehicleAuthorizationReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VehicleAuthorizationReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 vehicle_id = 1;
  void clear_vehicle_id();
  static const int kVehicleIdFieldNumber = 1;
  ::google::protobuf::uint32 vehicle_id() const;
  void set_vehicle_id(::google::protobuf::uint32 value);

  // uint32 vehicle_type = 2;
  void clear_vehicle_type();
  static const int kVehicleTypeFieldNumber = 2;
  ::google::protobuf::uint32 vehicle_type() const;
  void set_vehicle_type(::google::protobuf::uint32 value);

  // uint32 authorized_services = 3;
  void clear_authorized_services();
  static const int kAuthorizedServicesFieldNumber = 3;
  ::google::protobuf::uint32 authorized_services() const;
  void set_authorized_services(::google::protobuf::uint32 value);

  // uint32 granted_services = 4;
  void clear_granted_services();
  static const int kGrantedServicesFieldNumber = 4;
  ::google::protobuf::uint32 granted_services() const;
  void set_granted_services(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:VehicleAuthorizationReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 vehicle_id_;
  ::google::protobuf::uint32 vehicle_type_;
  ::google::protobuf::uint32 authorized_services_;
  ::google::protobuf::uint32 granted_services_;
  mutable int _cached_size_;
  friend struct ::protobuf_ProtoPackets_2eproto::TableStruct;
  friend void ::protobuf_ProtoPackets_2eproto::InitDefaultsVehicleAuthorizationReplyImpl();
};
// -------------------------------------------------------------------

class VehicleAuthorizationRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:VehicleAuthorizationRequest) */ {
 public:
  VehicleAuthorizationRequest();
  virtual ~VehicleAuthorizationRequest();

  VehicleAuthorizationRequest(const VehicleAuthorizationRequest& from);

  inline VehicleAuthorizationRequest& operator=(const VehicleAuthorizationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VehicleAuthorizationRequest(VehicleAuthorizationRequest&& from) noexcept
    : VehicleAuthorizationRequest() {
    *this = ::std::move(from);
  }

  inline VehicleAuthorizationRequest& operator=(VehicleAuthorizationRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VehicleAuthorizationRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VehicleAuthorizationRequest* internal_default_instance() {
    return reinterpret_cast<const VehicleAuthorizationRequest*>(
               &_VehicleAuthorizationRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(VehicleAuthorizationRequest* other);
  friend void swap(VehicleAuthorizationRequest& a, VehicleAuthorizationRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VehicleAuthorizationRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  VehicleAuthorizationRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VehicleAuthorizationRequest& from);
  void MergeFrom(const VehicleAuthorizationRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VehicleAuthorizationRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 vehicle_id = 1;
  void clear_vehicle_id();
  static const int kVehicleIdFieldNumber = 1;
  ::google::protobuf::uint32 vehicle_id() const;
  void set_vehicle_id(::google::protobuf::uint32 value);

  // uint32 vehicle_type = 2;
  void clear_vehicle_type();
  static const int kVehicleTypeFieldNumber = 2;
  ::google::protobuf::uint32 vehicle_type() const;
  void set_vehicle_type(::google::protobuf::uint32 value);

  // uint32 authorized_services = 3;
  void clear_authorized_services();
  static const int kAuthorizedServicesFieldNumber = 3;
  ::google::protobuf::uint32 authorized_services() const;
  void set_authorized_services(::google::protobuf::uint32 value);

  // uint32 granted_services = 4;
  void clear_granted_services();
  static const int kGrantedServicesFieldNumber = 4;
  ::google::protobuf::uint32 granted_services() const;
  void set_granted_services(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:VehicleAuthorizationRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 vehicle_id_;
  ::google::protobuf::uint32 vehicle_type_;
  ::google::protobuf::uint32 authorized_services_;
  ::google::protobuf::uint32 granted_services_;
  mutable int _cached_size_;
  friend struct ::protobuf_ProtoPackets_2eproto::TableStruct;
  friend void ::protobuf_ProtoPackets_2eproto::InitDefaultsVehicleAuthorizationRequestImpl();
};
// -------------------------------------------------------------------

class VehicleBodySensedState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:VehicleBodySensedState) */ {
 public:
  VehicleBodySensedState();
  virtual ~VehicleBodySensedState();

  VehicleBodySensedState(const VehicleBodySensedState& from);

  inline VehicleBodySensedState& operator=(const VehicleBodySensedState& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VehicleBodySensedState(VehicleBodySensedState&& from) noexcept
    : VehicleBodySensedState() {
    *this = ::std::move(from);
  }

  inline VehicleBodySensedState& operator=(VehicleBodySensedState&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VehicleBodySensedState& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VehicleBodySensedState* internal_default_instance() {
    return reinterpret_cast<const VehicleBodySensedState*>(
               &_VehicleBodySensedState_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(VehicleBodySensedState* other);
  friend void swap(VehicleBodySensedState& a, VehicleBodySensedState& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VehicleBodySensedState* New() const PROTOBUF_FINAL { return New(NULL); }

  VehicleBodySensedState* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VehicleBodySensedState& from);
  void MergeFrom(const VehicleBodySensedState& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VehicleBodySensedState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 vehicle_id = 1;
  void clear_vehicle_id();
  static const int kVehicleIdFieldNumber = 1;
  ::google::protobuf::uint32 vehicle_id() const;
  void set_vehicle_id(::google::protobuf::uint32 value);

  // float x_accel = 2;
  void clear_x_accel();
  static const int kXAccelFieldNumber = 2;
  float x_accel() const;
  void set_x_accel(float value);

  // float y_accel = 3;
  void clear_y_accel();
  static const int kYAccelFieldNumber = 3;
  float y_accel() const;
  void set_y_accel(float value);

  // float z_accel = 4;
  void clear_z_accel();
  static const int kZAccelFieldNumber = 4;
  float z_accel() const;
  void set_z_accel(float value);

  // float roll_rate = 5;
  void clear_roll_rate();
  static const int kRollRateFieldNumber = 5;
  float roll_rate() const;
  void set_roll_rate(float value);

  // float pitch_rate = 6;
  void clear_pitch_rate();
  static const int kPitchRateFieldNumber = 6;
  float pitch_rate() const;
  void set_pitch_rate(float value);

  // float yaw_rate = 7;
  void clear_yaw_rate();
  static const int kYawRateFieldNumber = 7;
  float yaw_rate() const;
  void set_yaw_rate(float value);

  // @@protoc_insertion_point(class_scope:VehicleBodySensedState)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 vehicle_id_;
  float x_accel_;
  float y_accel_;
  float z_accel_;
  float roll_rate_;
  float pitch_rate_;
  float yaw_rate_;
  mutable int _cached_size_;
  friend struct ::protobuf_ProtoPackets_2eproto::TableStruct;
  friend void ::protobuf_ProtoPackets_2eproto::InitDefaultsVehicleBodySensedStateImpl();
};
// -------------------------------------------------------------------

class VehicleGlobalPosition : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:VehicleGlobalPosition) */ {
 public:
  VehicleGlobalPosition();
  virtual ~VehicleGlobalPosition();

  VehicleGlobalPosition(const VehicleGlobalPosition& from);

  inline VehicleGlobalPosition& operator=(const VehicleGlobalPosition& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VehicleGlobalPosition(VehicleGlobalPosition&& from) noexcept
    : VehicleGlobalPosition() {
    *this = ::std::move(from);
  }

  inline VehicleGlobalPosition& operator=(VehicleGlobalPosition&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VehicleGlobalPosition& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VehicleGlobalPosition* internal_default_instance() {
    return reinterpret_cast<const VehicleGlobalPosition*>(
               &_VehicleGlobalPosition_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(VehicleGlobalPosition* other);
  friend void swap(VehicleGlobalPosition& a, VehicleGlobalPosition& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VehicleGlobalPosition* New() const PROTOBUF_FINAL { return New(NULL); }

  VehicleGlobalPosition* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VehicleGlobalPosition& from);
  void MergeFrom(const VehicleGlobalPosition& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VehicleGlobalPosition* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 vehicle_id = 1;
  void clear_vehicle_id();
  static const int kVehicleIdFieldNumber = 1;
  ::google::protobuf::uint32 vehicle_id() const;
  void set_vehicle_id(::google::protobuf::uint32 value);

  // float longitude = 2;
  void clear_longitude();
  static const int kLongitudeFieldNumber = 2;
  float longitude() const;
  void set_longitude(float value);

  // float latitude = 3;
  void clear_latitude();
  static const int kLatitudeFieldNumber = 3;
  float latitude() const;
  void set_latitude(float value);

  // float altitude = 4;
  void clear_altitude();
  static const int kAltitudeFieldNumber = 4;
  float altitude() const;
  void set_altitude(float value);

  // float x_speed = 5;
  void clear_x_speed();
  static const int kXSpeedFieldNumber = 5;
  float x_speed() const;
  void set_x_speed(float value);

  // float y_speed = 6;
  void clear_y_speed();
  static const int kYSpeedFieldNumber = 6;
  float y_speed() const;
  void set_y_speed(float value);

  // float z_speed = 7;
  void clear_z_speed();
  static const int kZSpeedFieldNumber = 7;
  float z_speed() const;
  void set_z_speed(float value);

  // @@protoc_insertion_point(class_scope:VehicleGlobalPosition)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 vehicle_id_;
  float longitude_;
  float latitude_;
  float altitude_;
  float x_speed_;
  float y_speed_;
  float z_speed_;
  mutable int _cached_size_;
  friend struct ::protobuf_ProtoPackets_2eproto::TableStruct;
  friend void ::protobuf_ProtoPackets_2eproto::InitDefaultsVehicleGlobalPositionImpl();
};
// -------------------------------------------------------------------

class VehicleIdentification : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:VehicleIdentification) */ {
 public:
  VehicleIdentification();
  virtual ~VehicleIdentification();

  VehicleIdentification(const VehicleIdentification& from);

  inline VehicleIdentification& operator=(const VehicleIdentification& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VehicleIdentification(VehicleIdentification&& from) noexcept
    : VehicleIdentification() {
    *this = ::std::move(from);
  }

  inline VehicleIdentification& operator=(VehicleIdentification&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VehicleIdentification& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VehicleIdentification* internal_default_instance() {
    return reinterpret_cast<const VehicleIdentification*>(
               &_VehicleIdentification_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(VehicleIdentification* other);
  friend void swap(VehicleIdentification& a, VehicleIdentification& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VehicleIdentification* New() const PROTOBUF_FINAL { return New(NULL); }

  VehicleIdentification* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VehicleIdentification& from);
  void MergeFrom(const VehicleIdentification& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VehicleIdentification* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 vehicle_id = 1;
  void clear_vehicle_id();
  static const int kVehicleIdFieldNumber = 1;
  ::google::protobuf::uint32 vehicle_id() const;
  void set_vehicle_id(::google::protobuf::uint32 value);

  // uint32 vehicle_type = 2;
  void clear_vehicle_type();
  static const int kVehicleTypeFieldNumber = 2;
  ::google::protobuf::uint32 vehicle_type() const;
  void set_vehicle_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:VehicleIdentification)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 vehicle_id_;
  ::google::protobuf::uint32 vehicle_type_;
  mutable int _cached_size_;
  friend struct ::protobuf_ProtoPackets_2eproto::TableStruct;
  friend void ::protobuf_ProtoPackets_2eproto::InitDefaultsVehicleIdentificationImpl();
};
// -------------------------------------------------------------------

class VehicleInertialState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:VehicleInertialState) */ {
 public:
  VehicleInertialState();
  virtual ~VehicleInertialState();

  VehicleInertialState(const VehicleInertialState& from);

  inline VehicleInertialState& operator=(const VehicleInertialState& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VehicleInertialState(VehicleInertialState&& from) noexcept
    : VehicleInertialState() {
    *this = ::std::move(from);
  }

  inline VehicleInertialState& operator=(VehicleInertialState&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VehicleInertialState& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VehicleInertialState* internal_default_instance() {
    return reinterpret_cast<const VehicleInertialState*>(
               &_VehicleInertialState_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(VehicleInertialState* other);
  friend void swap(VehicleInertialState& a, VehicleInertialState& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VehicleInertialState* New() const PROTOBUF_FINAL { return New(NULL); }

  VehicleInertialState* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VehicleInertialState& from);
  void MergeFrom(const VehicleInertialState& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VehicleInertialState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 vehicle_id = 1;
  void clear_vehicle_id();
  static const int kVehicleIdFieldNumber = 1;
  ::google::protobuf::uint32 vehicle_id() const;
  void set_vehicle_id(::google::protobuf::uint32 value);

  // float longitude = 2;
  void clear_longitude();
  static const int kLongitudeFieldNumber = 2;
  float longitude() const;
  void set_longitude(float value);

  // float latitude = 3;
  void clear_latitude();
  static const int kLatitudeFieldNumber = 3;
  float latitude() const;
  void set_latitude(float value);

  // float altitude = 4;
  void clear_altitude();
  static const int kAltitudeFieldNumber = 4;
  float altitude() const;
  void set_altitude(float value);

  // float roll = 5;
  void clear_roll();
  static const int kRollFieldNumber = 5;
  float roll() const;
  void set_roll(float value);

  // float pitch = 6;
  void clear_pitch();
  static const int kPitchFieldNumber = 6;
  float pitch() const;
  void set_pitch(float value);

  // float heading = 7;
  void clear_heading();
  static const int kHeadingFieldNumber = 7;
  float heading() const;
  void set_heading(float value);

  // float north_speed = 8;
  void clear_north_speed();
  static const int kNorthSpeedFieldNumber = 8;
  float north_speed() const;
  void set_north_speed(float value);

  // float east_speed = 9;
  void clear_east_speed();
  static const int kEastSpeedFieldNumber = 9;
  float east_speed() const;
  void set_east_speed(float value);

  // float vertical_speed = 10;
  void clear_vertical_speed();
  static const int kVerticalSpeedFieldNumber = 10;
  float vertical_speed() const;
  void set_vertical_speed(float value);

  // float roll_rate = 11;
  void clear_roll_rate();
  static const int kRollRateFieldNumber = 11;
  float roll_rate() const;
  void set_roll_rate(float value);

  // float pitch_rate = 12;
  void clear_pitch_rate();
  static const int kPitchRateFieldNumber = 12;
  float pitch_rate() const;
  void set_pitch_rate(float value);

  // float yaw_rate = 13;
  void clear_yaw_rate();
  static const int kYawRateFieldNumber = 13;
  float yaw_rate() const;
  void set_yaw_rate(float value);

  // float north_accel = 14;
  void clear_north_accel();
  static const int kNorthAccelFieldNumber = 14;
  float north_accel() const;
  void set_north_accel(float value);

  // float east_accel = 15;
  void clear_east_accel();
  static const int kEastAccelFieldNumber = 15;
  float east_accel() const;
  void set_east_accel(float value);

  // float vertical_accel = 16;
  void clear_vertical_accel();
  static const int kVerticalAccelFieldNumber = 16;
  float vertical_accel() const;
  void set_vertical_accel(float value);

  // @@protoc_insertion_point(class_scope:VehicleInertialState)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 vehicle_id_;
  float longitude_;
  float latitude_;
  float altitude_;
  float roll_;
  float pitch_;
  float heading_;
  float north_speed_;
  float east_speed_;
  float vertical_speed_;
  float roll_rate_;
  float pitch_rate_;
  float yaw_rate_;
  float north_accel_;
  float east_accel_;
  float vertical_accel_;
  mutable int _cached_size_;
  friend struct ::protobuf_ProtoPackets_2eproto::TableStruct;
  friend void ::protobuf_ProtoPackets_2eproto::InitDefaultsVehicleInertialStateImpl();
};
// -------------------------------------------------------------------

class VehicleModeCommand : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:VehicleModeCommand) */ {
 public:
  VehicleModeCommand();
  virtual ~VehicleModeCommand();

  VehicleModeCommand(const VehicleModeCommand& from);

  inline VehicleModeCommand& operator=(const VehicleModeCommand& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VehicleModeCommand(VehicleModeCommand&& from) noexcept
    : VehicleModeCommand() {
    *this = ::std::move(from);
  }

  inline VehicleModeCommand& operator=(VehicleModeCommand&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VehicleModeCommand& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VehicleModeCommand* internal_default_instance() {
    return reinterpret_cast<const VehicleModeCommand*>(
               &_VehicleModeCommand_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(VehicleModeCommand* other);
  friend void swap(VehicleModeCommand& a, VehicleModeCommand& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VehicleModeCommand* New() const PROTOBUF_FINAL { return New(NULL); }

  VehicleModeCommand* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VehicleModeCommand& from);
  void MergeFrom(const VehicleModeCommand& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VehicleModeCommand* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 vehicle_id = 1;
  void clear_vehicle_id();
  static const int kVehicleIdFieldNumber = 1;
  ::google::protobuf::uint32 vehicle_id() const;
  void set_vehicle_id(::google::protobuf::uint32 value);

  // uint32 vehicle_mode = 2;
  void clear_vehicle_mode();
  static const int kVehicleModeFieldNumber = 2;
  ::google::protobuf::uint32 vehicle_mode() const;
  void set_vehicle_mode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:VehicleModeCommand)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 vehicle_id_;
  ::google::protobuf::uint32 vehicle_mode_;
  mutable int _cached_size_;
  friend struct ::protobuf_ProtoPackets_2eproto::TableStruct;
  friend void ::protobuf_ProtoPackets_2eproto::InitDefaultsVehicleModeCommandImpl();
};
// -------------------------------------------------------------------

class VehicleSystemStatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:VehicleSystemStatus) */ {
 public:
  VehicleSystemStatus();
  virtual ~VehicleSystemStatus();

  VehicleSystemStatus(const VehicleSystemStatus& from);

  inline VehicleSystemStatus& operator=(const VehicleSystemStatus& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VehicleSystemStatus(VehicleSystemStatus&& from) noexcept
    : VehicleSystemStatus() {
    *this = ::std::move(from);
  }

  inline VehicleSystemStatus& operator=(VehicleSystemStatus&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VehicleSystemStatus& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VehicleSystemStatus* internal_default_instance() {
    return reinterpret_cast<const VehicleSystemStatus*>(
               &_VehicleSystemStatus_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(VehicleSystemStatus* other);
  friend void swap(VehicleSystemStatus& a, VehicleSystemStatus& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VehicleSystemStatus* New() const PROTOBUF_FINAL { return New(NULL); }

  VehicleSystemStatus* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VehicleSystemStatus& from);
  void MergeFrom(const VehicleSystemStatus& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VehicleSystemStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 vehicle_id = 1;
  void clear_vehicle_id();
  static const int kVehicleIdFieldNumber = 1;
  ::google::protobuf::uint32 vehicle_id() const;
  void set_vehicle_id(::google::protobuf::uint32 value);

  // uint32 vehicle_mode = 2;
  void clear_vehicle_mode();
  static const int kVehicleModeFieldNumber = 2;
  ::google::protobuf::uint32 vehicle_mode() const;
  void set_vehicle_mode(::google::protobuf::uint32 value);

  // uint32 vehicle_state = 3;
  void clear_vehicle_state();
  static const int kVehicleStateFieldNumber = 3;
  ::google::protobuf::uint32 vehicle_state() const;
  void set_vehicle_state(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:VehicleSystemStatus)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 vehicle_id_;
  ::google::protobuf::uint32 vehicle_mode_;
  ::google::protobuf::uint32 vehicle_state_;
  mutable int _cached_size_;
  friend struct ::protobuf_ProtoPackets_2eproto::TableStruct;
  friend void ::protobuf_ProtoPackets_2eproto::InitDefaultsVehicleSystemStatusImpl();
};
// -------------------------------------------------------------------

class VehicleTelemetryCommand : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:VehicleTelemetryCommand) */ {
 public:
  VehicleTelemetryCommand();
  virtual ~VehicleTelemetryCommand();

  VehicleTelemetryCommand(const VehicleTelemetryCommand& from);

  inline VehicleTelemetryCommand& operator=(const VehicleTelemetryCommand& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VehicleTelemetryCommand(VehicleTelemetryCommand&& from) noexcept
    : VehicleTelemetryCommand() {
    *this = ::std::move(from);
  }

  inline VehicleTelemetryCommand& operator=(VehicleTelemetryCommand&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VehicleTelemetryCommand& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VehicleTelemetryCommand* internal_default_instance() {
    return reinterpret_cast<const VehicleTelemetryCommand*>(
               &_VehicleTelemetryCommand_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(VehicleTelemetryCommand* other);
  friend void swap(VehicleTelemetryCommand& a, VehicleTelemetryCommand& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VehicleTelemetryCommand* New() const PROTOBUF_FINAL { return New(NULL); }

  VehicleTelemetryCommand* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VehicleTelemetryCommand& from);
  void MergeFrom(const VehicleTelemetryCommand& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VehicleTelemetryCommand* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 vehicle_id = 1;
  void clear_vehicle_id();
  static const int kVehicleIdFieldNumber = 1;
  ::google::protobuf::uint32 vehicle_id() const;
  void set_vehicle_id(::google::protobuf::uint32 value);

  // uint32 telemetry_select = 2;
  void clear_telemetry_select();
  static const int kTelemetrySelectFieldNumber = 2;
  ::google::protobuf::uint32 telemetry_select() const;
  void set_telemetry_select(::google::protobuf::uint32 value);

  // uint32 telemetry_rate = 3;
  void clear_telemetry_rate();
  static const int kTelemetryRateFieldNumber = 3;
  ::google::protobuf::uint32 telemetry_rate() const;
  void set_telemetry_rate(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:VehicleTelemetryCommand)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 vehicle_id_;
  ::google::protobuf::uint32 telemetry_select_;
  ::google::protobuf::uint32 telemetry_rate_;
  mutable int _cached_size_;
  friend struct ::protobuf_ProtoPackets_2eproto::TableStruct;
  friend void ::protobuf_ProtoPackets_2eproto::InitDefaultsVehicleTelemetryCommandImpl();
};
// -------------------------------------------------------------------

class VehicleTerminationCommand : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:VehicleTerminationCommand) */ {
 public:
  VehicleTerminationCommand();
  virtual ~VehicleTerminationCommand();

  VehicleTerminationCommand(const VehicleTerminationCommand& from);

  inline VehicleTerminationCommand& operator=(const VehicleTerminationCommand& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VehicleTerminationCommand(VehicleTerminationCommand&& from) noexcept
    : VehicleTerminationCommand() {
    *this = ::std::move(from);
  }

  inline VehicleTerminationCommand& operator=(VehicleTerminationCommand&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VehicleTerminationCommand& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VehicleTerminationCommand* internal_default_instance() {
    return reinterpret_cast<const VehicleTerminationCommand*>(
               &_VehicleTerminationCommand_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(VehicleTerminationCommand* other);
  friend void swap(VehicleTerminationCommand& a, VehicleTerminationCommand& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VehicleTerminationCommand* New() const PROTOBUF_FINAL { return New(NULL); }

  VehicleTerminationCommand* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VehicleTerminationCommand& from);
  void MergeFrom(const VehicleTerminationCommand& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VehicleTerminationCommand* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 vehicle_id = 1;
  void clear_vehicle_id();
  static const int kVehicleIdFieldNumber = 1;
  ::google::protobuf::uint32 vehicle_id() const;
  void set_vehicle_id(::google::protobuf::uint32 value);

  // uint32 termination_mode = 2;
  void clear_termination_mode();
  static const int kTerminationModeFieldNumber = 2;
  ::google::protobuf::uint32 termination_mode() const;
  void set_termination_mode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:VehicleTerminationCommand)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 vehicle_id_;
  ::google::protobuf::uint32 termination_mode_;
  mutable int _cached_size_;
  friend struct ::protobuf_ProtoPackets_2eproto::TableStruct;
  friend void ::protobuf_ProtoPackets_2eproto::InitDefaultsVehicleTerminationCommandImpl();
};
// -------------------------------------------------------------------

class VehicleWaypointCommand : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:VehicleWaypointCommand) */ {
 public:
  VehicleWaypointCommand();
  virtual ~VehicleWaypointCommand();

  VehicleWaypointCommand(const VehicleWaypointCommand& from);

  inline VehicleWaypointCommand& operator=(const VehicleWaypointCommand& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VehicleWaypointCommand(VehicleWaypointCommand&& from) noexcept
    : VehicleWaypointCommand() {
    *this = ::std::move(from);
  }

  inline VehicleWaypointCommand& operator=(VehicleWaypointCommand&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VehicleWaypointCommand& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VehicleWaypointCommand* internal_default_instance() {
    return reinterpret_cast<const VehicleWaypointCommand*>(
               &_VehicleWaypointCommand_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(VehicleWaypointCommand* other);
  friend void swap(VehicleWaypointCommand& a, VehicleWaypointCommand& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VehicleWaypointCommand* New() const PROTOBUF_FINAL { return New(NULL); }

  VehicleWaypointCommand* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VehicleWaypointCommand& from);
  void MergeFrom(const VehicleWaypointCommand& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VehicleWaypointCommand* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 vehicle_id = 1;
  void clear_vehicle_id();
  static const int kVehicleIdFieldNumber = 1;
  ::google::protobuf::uint32 vehicle_id() const;
  void set_vehicle_id(::google::protobuf::uint32 value);

  // float longitude = 2;
  void clear_longitude();
  static const int kLongitudeFieldNumber = 2;
  float longitude() const;
  void set_longitude(float value);

  // float latitude = 3;
  void clear_latitude();
  static const int kLatitudeFieldNumber = 3;
  float latitude() const;
  void set_latitude(float value);

  // float altitude = 4;
  void clear_altitude();
  static const int kAltitudeFieldNumber = 4;
  float altitude() const;
  void set_altitude(float value);

  // @@protoc_insertion_point(class_scope:VehicleWaypointCommand)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 vehicle_id_;
  float longitude_;
  float latitude_;
  float altitude_;
  mutable int _cached_size_;
  friend struct ::protobuf_ProtoPackets_2eproto::TableStruct;
  friend void ::protobuf_ProtoPackets_2eproto::InitDefaultsVehicleWaypointCommandImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// AirVehicleGroundRelativeState

// uint32 vehicle_id = 1;
inline void AirVehicleGroundRelativeState::clear_vehicle_id() {
  vehicle_id_ = 0u;
}
inline ::google::protobuf::uint32 AirVehicleGroundRelativeState::vehicle_id() const {
  // @@protoc_insertion_point(field_get:AirVehicleGroundRelativeState.vehicle_id)
  return vehicle_id_;
}
inline void AirVehicleGroundRelativeState::set_vehicle_id(::google::protobuf::uint32 value) {
  
  vehicle_id_ = value;
  // @@protoc_insertion_point(field_set:AirVehicleGroundRelativeState.vehicle_id)
}

// float angle_of_attack = 2;
inline void AirVehicleGroundRelativeState::clear_angle_of_attack() {
  angle_of_attack_ = 0;
}
inline float AirVehicleGroundRelativeState::angle_of_attack() const {
  // @@protoc_insertion_point(field_get:AirVehicleGroundRelativeState.angle_of_attack)
  return angle_of_attack_;
}
inline void AirVehicleGroundRelativeState::set_angle_of_attack(float value) {
  
  angle_of_attack_ = value;
  // @@protoc_insertion_point(field_set:AirVehicleGroundRelativeState.angle_of_attack)
}

// float angle_of_sideslip = 3;
inline void AirVehicleGroundRelativeState::clear_angle_of_sideslip() {
  angle_of_sideslip_ = 0;
}
inline float AirVehicleGroundRelativeState::angle_of_sideslip() const {
  // @@protoc_insertion_point(field_get:AirVehicleGroundRelativeState.angle_of_sideslip)
  return angle_of_sideslip_;
}
inline void AirVehicleGroundRelativeState::set_angle_of_sideslip(float value) {
  
  angle_of_sideslip_ = value;
  // @@protoc_insertion_point(field_set:AirVehicleGroundRelativeState.angle_of_sideslip)
}

// float true_airspeed = 4;
inline void AirVehicleGroundRelativeState::clear_true_airspeed() {
  true_airspeed_ = 0;
}
inline float AirVehicleGroundRelativeState::true_airspeed() const {
  // @@protoc_insertion_point(field_get:AirVehicleGroundRelativeState.true_airspeed)
  return true_airspeed_;
}
inline void AirVehicleGroundRelativeState::set_true_airspeed(float value) {
  
  true_airspeed_ = value;
  // @@protoc_insertion_point(field_set:AirVehicleGroundRelativeState.true_airspeed)
}

// float indicated_airspeed = 5;
inline void AirVehicleGroundRelativeState::clear_indicated_airspeed() {
  indicated_airspeed_ = 0;
}
inline float AirVehicleGroundRelativeState::indicated_airspeed() const {
  // @@protoc_insertion_point(field_get:AirVehicleGroundRelativeState.indicated_airspeed)
  return indicated_airspeed_;
}
inline void AirVehicleGroundRelativeState::set_indicated_airspeed(float value) {
  
  indicated_airspeed_ = value;
  // @@protoc_insertion_point(field_set:AirVehicleGroundRelativeState.indicated_airspeed)
}

// float north_wind_speed = 6;
inline void AirVehicleGroundRelativeState::clear_north_wind_speed() {
  north_wind_speed_ = 0;
}
inline float AirVehicleGroundRelativeState::north_wind_speed() const {
  // @@protoc_insertion_point(field_get:AirVehicleGroundRelativeState.north_wind_speed)
  return north_wind_speed_;
}
inline void AirVehicleGroundRelativeState::set_north_wind_speed(float value) {
  
  north_wind_speed_ = value;
  // @@protoc_insertion_point(field_set:AirVehicleGroundRelativeState.north_wind_speed)
}

// float east_wind_speed = 7;
inline void AirVehicleGroundRelativeState::clear_east_wind_speed() {
  east_wind_speed_ = 0;
}
inline float AirVehicleGroundRelativeState::east_wind_speed() const {
  // @@protoc_insertion_point(field_get:AirVehicleGroundRelativeState.east_wind_speed)
  return east_wind_speed_;
}
inline void AirVehicleGroundRelativeState::set_east_wind_speed(float value) {
  
  east_wind_speed_ = value;
  // @@protoc_insertion_point(field_set:AirVehicleGroundRelativeState.east_wind_speed)
}

// float north_ground_speed = 8;
inline void AirVehicleGroundRelativeState::clear_north_ground_speed() {
  north_ground_speed_ = 0;
}
inline float AirVehicleGroundRelativeState::north_ground_speed() const {
  // @@protoc_insertion_point(field_get:AirVehicleGroundRelativeState.north_ground_speed)
  return north_ground_speed_;
}
inline void AirVehicleGroundRelativeState::set_north_ground_speed(float value) {
  
  north_ground_speed_ = value;
  // @@protoc_insertion_point(field_set:AirVehicleGroundRelativeState.north_ground_speed)
}

// float east_ground_speed = 9;
inline void AirVehicleGroundRelativeState::clear_east_ground_speed() {
  east_ground_speed_ = 0;
}
inline float AirVehicleGroundRelativeState::east_ground_speed() const {
  // @@protoc_insertion_point(field_get:AirVehicleGroundRelativeState.east_ground_speed)
  return east_ground_speed_;
}
inline void AirVehicleGroundRelativeState::set_east_ground_speed(float value) {
  
  east_ground_speed_ = value;
  // @@protoc_insertion_point(field_set:AirVehicleGroundRelativeState.east_ground_speed)
}

// float barometric_pressure = 10;
inline void AirVehicleGroundRelativeState::clear_barometric_pressure() {
  barometric_pressure_ = 0;
}
inline float AirVehicleGroundRelativeState::barometric_pressure() const {
  // @@protoc_insertion_point(field_get:AirVehicleGroundRelativeState.barometric_pressure)
  return barometric_pressure_;
}
inline void AirVehicleGroundRelativeState::set_barometric_pressure(float value) {
  
  barometric_pressure_ = value;
  // @@protoc_insertion_point(field_set:AirVehicleGroundRelativeState.barometric_pressure)
}

// float barometric_altitude = 11;
inline void AirVehicleGroundRelativeState::clear_barometric_altitude() {
  barometric_altitude_ = 0;
}
inline float AirVehicleGroundRelativeState::barometric_altitude() const {
  // @@protoc_insertion_point(field_get:AirVehicleGroundRelativeState.barometric_altitude)
  return barometric_altitude_;
}
inline void AirVehicleGroundRelativeState::set_barometric_altitude(float value) {
  
  barometric_altitude_ = value;
  // @@protoc_insertion_point(field_set:AirVehicleGroundRelativeState.barometric_altitude)
}

// -------------------------------------------------------------------

// ArmCommand

// uint32 id = 1;
inline void ArmCommand::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 ArmCommand::id() const {
  // @@protoc_insertion_point(field_get:ArmCommand.id)
  return id_;
}
inline void ArmCommand::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:ArmCommand.id)
}

// int32 position = 2;
inline void ArmCommand::clear_position() {
  position_ = 0;
}
inline ::google::protobuf::int32 ArmCommand::position() const {
  // @@protoc_insertion_point(field_get:ArmCommand.position)
  return position_;
}
inline void ArmCommand::set_position(::google::protobuf::int32 value) {
  
  position_ = value;
  // @@protoc_insertion_point(field_set:ArmCommand.position)
}

// -------------------------------------------------------------------

// ArmPosition

// int32 position1 = 1;
inline void ArmPosition::clear_position1() {
  position1_ = 0;
}
inline ::google::protobuf::int32 ArmPosition::position1() const {
  // @@protoc_insertion_point(field_get:ArmPosition.position1)
  return position1_;
}
inline void ArmPosition::set_position1(::google::protobuf::int32 value) {
  
  position1_ = value;
  // @@protoc_insertion_point(field_set:ArmPosition.position1)
}

// int32 position2 = 2;
inline void ArmPosition::clear_position2() {
  position2_ = 0;
}
inline ::google::protobuf::int32 ArmPosition::position2() const {
  // @@protoc_insertion_point(field_get:ArmPosition.position2)
  return position2_;
}
inline void ArmPosition::set_position2(::google::protobuf::int32 value) {
  
  position2_ = value;
  // @@protoc_insertion_point(field_set:ArmPosition.position2)
}

// int32 position3 = 3;
inline void ArmPosition::clear_position3() {
  position3_ = 0;
}
inline ::google::protobuf::int32 ArmPosition::position3() const {
  // @@protoc_insertion_point(field_get:ArmPosition.position3)
  return position3_;
}
inline void ArmPosition::set_position3(::google::protobuf::int32 value) {
  
  position3_ = value;
  // @@protoc_insertion_point(field_set:ArmPosition.position3)
}

// int32 position4 = 4;
inline void ArmPosition::clear_position4() {
  position4_ = 0;
}
inline ::google::protobuf::int32 ArmPosition::position4() const {
  // @@protoc_insertion_point(field_get:ArmPosition.position4)
  return position4_;
}
inline void ArmPosition::set_position4(::google::protobuf::int32 value) {
  
  position4_ = value;
  // @@protoc_insertion_point(field_set:ArmPosition.position4)
}

// -------------------------------------------------------------------

// Battery

// uint32 batteryPercentage = 1;
inline void Battery::clear_batterypercentage() {
  batterypercentage_ = 0u;
}
inline ::google::protobuf::uint32 Battery::batterypercentage() const {
  // @@protoc_insertion_point(field_get:Battery.batteryPercentage)
  return batterypercentage_;
}
inline void Battery::set_batterypercentage(::google::protobuf::uint32 value) {
  
  batterypercentage_ = value;
  // @@protoc_insertion_point(field_set:Battery.batteryPercentage)
}

// -------------------------------------------------------------------

// TargetAcknowledgement

// uint32 target_status = 1;
inline void TargetAcknowledgement::clear_target_status() {
  target_status_ = 0u;
}
inline ::google::protobuf::uint32 TargetAcknowledgement::target_status() const {
  // @@protoc_insertion_point(field_get:TargetAcknowledgement.target_status)
  return target_status_;
}
inline void TargetAcknowledgement::set_target_status(::google::protobuf::uint32 value) {
  
  target_status_ = value;
  // @@protoc_insertion_point(field_set:TargetAcknowledgement.target_status)
}

// -------------------------------------------------------------------

// TargetDesignationCommand

// uint32 vehicle_id = 1;
inline void TargetDesignationCommand::clear_vehicle_id() {
  vehicle_id_ = 0u;
}
inline ::google::protobuf::uint32 TargetDesignationCommand::vehicle_id() const {
  // @@protoc_insertion_point(field_get:TargetDesignationCommand.vehicle_id)
  return vehicle_id_;
}
inline void TargetDesignationCommand::set_vehicle_id(::google::protobuf::uint32 value) {
  
  vehicle_id_ = value;
  // @@protoc_insertion_point(field_set:TargetDesignationCommand.vehicle_id)
}

// uint32 payload_id = 2;
inline void TargetDesignationCommand::clear_payload_id() {
  payload_id_ = 0u;
}
inline ::google::protobuf::uint32 TargetDesignationCommand::payload_id() const {
  // @@protoc_insertion_point(field_get:TargetDesignationCommand.payload_id)
  return payload_id_;
}
inline void TargetDesignationCommand::set_payload_id(::google::protobuf::uint32 value) {
  
  payload_id_ = value;
  // @@protoc_insertion_point(field_set:TargetDesignationCommand.payload_id)
}

// uint32 target_id = 3;
inline void TargetDesignationCommand::clear_target_id() {
  target_id_ = 0u;
}
inline ::google::protobuf::uint32 TargetDesignationCommand::target_id() const {
  // @@protoc_insertion_point(field_get:TargetDesignationCommand.target_id)
  return target_id_;
}
inline void TargetDesignationCommand::set_target_id(::google::protobuf::uint32 value) {
  
  target_id_ = value;
  // @@protoc_insertion_point(field_set:TargetDesignationCommand.target_id)
}

// uint32 target_type = 4;
inline void TargetDesignationCommand::clear_target_type() {
  target_type_ = 0u;
}
inline ::google::protobuf::uint32 TargetDesignationCommand::target_type() const {
  // @@protoc_insertion_point(field_get:TargetDesignationCommand.target_type)
  return target_type_;
}
inline void TargetDesignationCommand::set_target_type(::google::protobuf::uint32 value) {
  
  target_type_ = value;
  // @@protoc_insertion_point(field_set:TargetDesignationCommand.target_type)
}

// float longitude = 5;
inline void TargetDesignationCommand::clear_longitude() {
  longitude_ = 0;
}
inline float TargetDesignationCommand::longitude() const {
  // @@protoc_insertion_point(field_get:TargetDesignationCommand.longitude)
  return longitude_;
}
inline void TargetDesignationCommand::set_longitude(float value) {
  
  longitude_ = value;
  // @@protoc_insertion_point(field_set:TargetDesignationCommand.longitude)
}

// float latitude = 6;
inline void TargetDesignationCommand::clear_latitude() {
  latitude_ = 0;
}
inline float TargetDesignationCommand::latitude() const {
  // @@protoc_insertion_point(field_get:TargetDesignationCommand.latitude)
  return latitude_;
}
inline void TargetDesignationCommand::set_latitude(float value) {
  
  latitude_ = value;
  // @@protoc_insertion_point(field_set:TargetDesignationCommand.latitude)
}

// float altitude = 7;
inline void TargetDesignationCommand::clear_altitude() {
  altitude_ = 0;
}
inline float TargetDesignationCommand::altitude() const {
  // @@protoc_insertion_point(field_get:TargetDesignationCommand.altitude)
  return altitude_;
}
inline void TargetDesignationCommand::set_altitude(float value) {
  
  altitude_ = value;
  // @@protoc_insertion_point(field_set:TargetDesignationCommand.altitude)
}

// -------------------------------------------------------------------

// TargetStatus

// double target_radius = 1;
inline void TargetStatus::clear_target_radius() {
  target_radius_ = 0;
}
inline double TargetStatus::target_radius() const {
  // @@protoc_insertion_point(field_get:TargetStatus.target_radius)
  return target_radius_;
}
inline void TargetStatus::set_target_radius(double value) {
  
  target_radius_ = value;
  // @@protoc_insertion_point(field_set:TargetStatus.target_radius)
}

// double target_angle = 2;
inline void TargetStatus::clear_target_angle() {
  target_angle_ = 0;
}
inline double TargetStatus::target_angle() const {
  // @@protoc_insertion_point(field_get:TargetStatus.target_angle)
  return target_angle_;
}
inline void TargetStatus::set_target_angle(double value) {
  
  target_angle_ = value;
  // @@protoc_insertion_point(field_set:TargetStatus.target_angle)
}

// double target_altitude = 3;
inline void TargetStatus::clear_target_altitude() {
  target_altitude_ = 0;
}
inline double TargetStatus::target_altitude() const {
  // @@protoc_insertion_point(field_get:TargetStatus.target_altitude)
  return target_altitude_;
}
inline void TargetStatus::set_target_altitude(double value) {
  
  target_altitude_ = value;
  // @@protoc_insertion_point(field_set:TargetStatus.target_altitude)
}

// -------------------------------------------------------------------

// VehicleAttitude

// uint32 vehicle_id = 1;
inline void VehicleAttitude::clear_vehicle_id() {
  vehicle_id_ = 0u;
}
inline ::google::protobuf::uint32 VehicleAttitude::vehicle_id() const {
  // @@protoc_insertion_point(field_get:VehicleAttitude.vehicle_id)
  return vehicle_id_;
}
inline void VehicleAttitude::set_vehicle_id(::google::protobuf::uint32 value) {
  
  vehicle_id_ = value;
  // @@protoc_insertion_point(field_set:VehicleAttitude.vehicle_id)
}

// float roll = 2;
inline void VehicleAttitude::clear_roll() {
  roll_ = 0;
}
inline float VehicleAttitude::roll() const {
  // @@protoc_insertion_point(field_get:VehicleAttitude.roll)
  return roll_;
}
inline void VehicleAttitude::set_roll(float value) {
  
  roll_ = value;
  // @@protoc_insertion_point(field_set:VehicleAttitude.roll)
}

// float pitch = 3;
inline void VehicleAttitude::clear_pitch() {
  pitch_ = 0;
}
inline float VehicleAttitude::pitch() const {
  // @@protoc_insertion_point(field_get:VehicleAttitude.pitch)
  return pitch_;
}
inline void VehicleAttitude::set_pitch(float value) {
  
  pitch_ = value;
  // @@protoc_insertion_point(field_set:VehicleAttitude.pitch)
}

// float yaw = 4;
inline void VehicleAttitude::clear_yaw() {
  yaw_ = 0;
}
inline float VehicleAttitude::yaw() const {
  // @@protoc_insertion_point(field_get:VehicleAttitude.yaw)
  return yaw_;
}
inline void VehicleAttitude::set_yaw(float value) {
  
  yaw_ = value;
  // @@protoc_insertion_point(field_set:VehicleAttitude.yaw)
}

// -------------------------------------------------------------------

// VehicleAuthorizationReply

// uint32 vehicle_id = 1;
inline void VehicleAuthorizationReply::clear_vehicle_id() {
  vehicle_id_ = 0u;
}
inline ::google::protobuf::uint32 VehicleAuthorizationReply::vehicle_id() const {
  // @@protoc_insertion_point(field_get:VehicleAuthorizationReply.vehicle_id)
  return vehicle_id_;
}
inline void VehicleAuthorizationReply::set_vehicle_id(::google::protobuf::uint32 value) {
  
  vehicle_id_ = value;
  // @@protoc_insertion_point(field_set:VehicleAuthorizationReply.vehicle_id)
}

// uint32 vehicle_type = 2;
inline void VehicleAuthorizationReply::clear_vehicle_type() {
  vehicle_type_ = 0u;
}
inline ::google::protobuf::uint32 VehicleAuthorizationReply::vehicle_type() const {
  // @@protoc_insertion_point(field_get:VehicleAuthorizationReply.vehicle_type)
  return vehicle_type_;
}
inline void VehicleAuthorizationReply::set_vehicle_type(::google::protobuf::uint32 value) {
  
  vehicle_type_ = value;
  // @@protoc_insertion_point(field_set:VehicleAuthorizationReply.vehicle_type)
}

// uint32 authorized_services = 3;
inline void VehicleAuthorizationReply::clear_authorized_services() {
  authorized_services_ = 0u;
}
inline ::google::protobuf::uint32 VehicleAuthorizationReply::authorized_services() const {
  // @@protoc_insertion_point(field_get:VehicleAuthorizationReply.authorized_services)
  return authorized_services_;
}
inline void VehicleAuthorizationReply::set_authorized_services(::google::protobuf::uint32 value) {
  
  authorized_services_ = value;
  // @@protoc_insertion_point(field_set:VehicleAuthorizationReply.authorized_services)
}

// uint32 granted_services = 4;
inline void VehicleAuthorizationReply::clear_granted_services() {
  granted_services_ = 0u;
}
inline ::google::protobuf::uint32 VehicleAuthorizationReply::granted_services() const {
  // @@protoc_insertion_point(field_get:VehicleAuthorizationReply.granted_services)
  return granted_services_;
}
inline void VehicleAuthorizationReply::set_granted_services(::google::protobuf::uint32 value) {
  
  granted_services_ = value;
  // @@protoc_insertion_point(field_set:VehicleAuthorizationReply.granted_services)
}

// -------------------------------------------------------------------

// VehicleAuthorizationRequest

// uint32 vehicle_id = 1;
inline void VehicleAuthorizationRequest::clear_vehicle_id() {
  vehicle_id_ = 0u;
}
inline ::google::protobuf::uint32 VehicleAuthorizationRequest::vehicle_id() const {
  // @@protoc_insertion_point(field_get:VehicleAuthorizationRequest.vehicle_id)
  return vehicle_id_;
}
inline void VehicleAuthorizationRequest::set_vehicle_id(::google::protobuf::uint32 value) {
  
  vehicle_id_ = value;
  // @@protoc_insertion_point(field_set:VehicleAuthorizationRequest.vehicle_id)
}

// uint32 vehicle_type = 2;
inline void VehicleAuthorizationRequest::clear_vehicle_type() {
  vehicle_type_ = 0u;
}
inline ::google::protobuf::uint32 VehicleAuthorizationRequest::vehicle_type() const {
  // @@protoc_insertion_point(field_get:VehicleAuthorizationRequest.vehicle_type)
  return vehicle_type_;
}
inline void VehicleAuthorizationRequest::set_vehicle_type(::google::protobuf::uint32 value) {
  
  vehicle_type_ = value;
  // @@protoc_insertion_point(field_set:VehicleAuthorizationRequest.vehicle_type)
}

// uint32 authorized_services = 3;
inline void VehicleAuthorizationRequest::clear_authorized_services() {
  authorized_services_ = 0u;
}
inline ::google::protobuf::uint32 VehicleAuthorizationRequest::authorized_services() const {
  // @@protoc_insertion_point(field_get:VehicleAuthorizationRequest.authorized_services)
  return authorized_services_;
}
inline void VehicleAuthorizationRequest::set_authorized_services(::google::protobuf::uint32 value) {
  
  authorized_services_ = value;
  // @@protoc_insertion_point(field_set:VehicleAuthorizationRequest.authorized_services)
}

// uint32 granted_services = 4;
inline void VehicleAuthorizationRequest::clear_granted_services() {
  granted_services_ = 0u;
}
inline ::google::protobuf::uint32 VehicleAuthorizationRequest::granted_services() const {
  // @@protoc_insertion_point(field_get:VehicleAuthorizationRequest.granted_services)
  return granted_services_;
}
inline void VehicleAuthorizationRequest::set_granted_services(::google::protobuf::uint32 value) {
  
  granted_services_ = value;
  // @@protoc_insertion_point(field_set:VehicleAuthorizationRequest.granted_services)
}

// -------------------------------------------------------------------

// VehicleBodySensedState

// uint32 vehicle_id = 1;
inline void VehicleBodySensedState::clear_vehicle_id() {
  vehicle_id_ = 0u;
}
inline ::google::protobuf::uint32 VehicleBodySensedState::vehicle_id() const {
  // @@protoc_insertion_point(field_get:VehicleBodySensedState.vehicle_id)
  return vehicle_id_;
}
inline void VehicleBodySensedState::set_vehicle_id(::google::protobuf::uint32 value) {
  
  vehicle_id_ = value;
  // @@protoc_insertion_point(field_set:VehicleBodySensedState.vehicle_id)
}

// float x_accel = 2;
inline void VehicleBodySensedState::clear_x_accel() {
  x_accel_ = 0;
}
inline float VehicleBodySensedState::x_accel() const {
  // @@protoc_insertion_point(field_get:VehicleBodySensedState.x_accel)
  return x_accel_;
}
inline void VehicleBodySensedState::set_x_accel(float value) {
  
  x_accel_ = value;
  // @@protoc_insertion_point(field_set:VehicleBodySensedState.x_accel)
}

// float y_accel = 3;
inline void VehicleBodySensedState::clear_y_accel() {
  y_accel_ = 0;
}
inline float VehicleBodySensedState::y_accel() const {
  // @@protoc_insertion_point(field_get:VehicleBodySensedState.y_accel)
  return y_accel_;
}
inline void VehicleBodySensedState::set_y_accel(float value) {
  
  y_accel_ = value;
  // @@protoc_insertion_point(field_set:VehicleBodySensedState.y_accel)
}

// float z_accel = 4;
inline void VehicleBodySensedState::clear_z_accel() {
  z_accel_ = 0;
}
inline float VehicleBodySensedState::z_accel() const {
  // @@protoc_insertion_point(field_get:VehicleBodySensedState.z_accel)
  return z_accel_;
}
inline void VehicleBodySensedState::set_z_accel(float value) {
  
  z_accel_ = value;
  // @@protoc_insertion_point(field_set:VehicleBodySensedState.z_accel)
}

// float roll_rate = 5;
inline void VehicleBodySensedState::clear_roll_rate() {
  roll_rate_ = 0;
}
inline float VehicleBodySensedState::roll_rate() const {
  // @@protoc_insertion_point(field_get:VehicleBodySensedState.roll_rate)
  return roll_rate_;
}
inline void VehicleBodySensedState::set_roll_rate(float value) {
  
  roll_rate_ = value;
  // @@protoc_insertion_point(field_set:VehicleBodySensedState.roll_rate)
}

// float pitch_rate = 6;
inline void VehicleBodySensedState::clear_pitch_rate() {
  pitch_rate_ = 0;
}
inline float VehicleBodySensedState::pitch_rate() const {
  // @@protoc_insertion_point(field_get:VehicleBodySensedState.pitch_rate)
  return pitch_rate_;
}
inline void VehicleBodySensedState::set_pitch_rate(float value) {
  
  pitch_rate_ = value;
  // @@protoc_insertion_point(field_set:VehicleBodySensedState.pitch_rate)
}

// float yaw_rate = 7;
inline void VehicleBodySensedState::clear_yaw_rate() {
  yaw_rate_ = 0;
}
inline float VehicleBodySensedState::yaw_rate() const {
  // @@protoc_insertion_point(field_get:VehicleBodySensedState.yaw_rate)
  return yaw_rate_;
}
inline void VehicleBodySensedState::set_yaw_rate(float value) {
  
  yaw_rate_ = value;
  // @@protoc_insertion_point(field_set:VehicleBodySensedState.yaw_rate)
}

// -------------------------------------------------------------------

// VehicleGlobalPosition

// uint32 vehicle_id = 1;
inline void VehicleGlobalPosition::clear_vehicle_id() {
  vehicle_id_ = 0u;
}
inline ::google::protobuf::uint32 VehicleGlobalPosition::vehicle_id() const {
  // @@protoc_insertion_point(field_get:VehicleGlobalPosition.vehicle_id)
  return vehicle_id_;
}
inline void VehicleGlobalPosition::set_vehicle_id(::google::protobuf::uint32 value) {
  
  vehicle_id_ = value;
  // @@protoc_insertion_point(field_set:VehicleGlobalPosition.vehicle_id)
}

// float longitude = 2;
inline void VehicleGlobalPosition::clear_longitude() {
  longitude_ = 0;
}
inline float VehicleGlobalPosition::longitude() const {
  // @@protoc_insertion_point(field_get:VehicleGlobalPosition.longitude)
  return longitude_;
}
inline void VehicleGlobalPosition::set_longitude(float value) {
  
  longitude_ = value;
  // @@protoc_insertion_point(field_set:VehicleGlobalPosition.longitude)
}

// float latitude = 3;
inline void VehicleGlobalPosition::clear_latitude() {
  latitude_ = 0;
}
inline float VehicleGlobalPosition::latitude() const {
  // @@protoc_insertion_point(field_get:VehicleGlobalPosition.latitude)
  return latitude_;
}
inline void VehicleGlobalPosition::set_latitude(float value) {
  
  latitude_ = value;
  // @@protoc_insertion_point(field_set:VehicleGlobalPosition.latitude)
}

// float altitude = 4;
inline void VehicleGlobalPosition::clear_altitude() {
  altitude_ = 0;
}
inline float VehicleGlobalPosition::altitude() const {
  // @@protoc_insertion_point(field_get:VehicleGlobalPosition.altitude)
  return altitude_;
}
inline void VehicleGlobalPosition::set_altitude(float value) {
  
  altitude_ = value;
  // @@protoc_insertion_point(field_set:VehicleGlobalPosition.altitude)
}

// float x_speed = 5;
inline void VehicleGlobalPosition::clear_x_speed() {
  x_speed_ = 0;
}
inline float VehicleGlobalPosition::x_speed() const {
  // @@protoc_insertion_point(field_get:VehicleGlobalPosition.x_speed)
  return x_speed_;
}
inline void VehicleGlobalPosition::set_x_speed(float value) {
  
  x_speed_ = value;
  // @@protoc_insertion_point(field_set:VehicleGlobalPosition.x_speed)
}

// float y_speed = 6;
inline void VehicleGlobalPosition::clear_y_speed() {
  y_speed_ = 0;
}
inline float VehicleGlobalPosition::y_speed() const {
  // @@protoc_insertion_point(field_get:VehicleGlobalPosition.y_speed)
  return y_speed_;
}
inline void VehicleGlobalPosition::set_y_speed(float value) {
  
  y_speed_ = value;
  // @@protoc_insertion_point(field_set:VehicleGlobalPosition.y_speed)
}

// float z_speed = 7;
inline void VehicleGlobalPosition::clear_z_speed() {
  z_speed_ = 0;
}
inline float VehicleGlobalPosition::z_speed() const {
  // @@protoc_insertion_point(field_get:VehicleGlobalPosition.z_speed)
  return z_speed_;
}
inline void VehicleGlobalPosition::set_z_speed(float value) {
  
  z_speed_ = value;
  // @@protoc_insertion_point(field_set:VehicleGlobalPosition.z_speed)
}

// -------------------------------------------------------------------

// VehicleIdentification

// uint32 vehicle_id = 1;
inline void VehicleIdentification::clear_vehicle_id() {
  vehicle_id_ = 0u;
}
inline ::google::protobuf::uint32 VehicleIdentification::vehicle_id() const {
  // @@protoc_insertion_point(field_get:VehicleIdentification.vehicle_id)
  return vehicle_id_;
}
inline void VehicleIdentification::set_vehicle_id(::google::protobuf::uint32 value) {
  
  vehicle_id_ = value;
  // @@protoc_insertion_point(field_set:VehicleIdentification.vehicle_id)
}

// uint32 vehicle_type = 2;
inline void VehicleIdentification::clear_vehicle_type() {
  vehicle_type_ = 0u;
}
inline ::google::protobuf::uint32 VehicleIdentification::vehicle_type() const {
  // @@protoc_insertion_point(field_get:VehicleIdentification.vehicle_type)
  return vehicle_type_;
}
inline void VehicleIdentification::set_vehicle_type(::google::protobuf::uint32 value) {
  
  vehicle_type_ = value;
  // @@protoc_insertion_point(field_set:VehicleIdentification.vehicle_type)
}

// -------------------------------------------------------------------

// VehicleInertialState

// uint32 vehicle_id = 1;
inline void VehicleInertialState::clear_vehicle_id() {
  vehicle_id_ = 0u;
}
inline ::google::protobuf::uint32 VehicleInertialState::vehicle_id() const {
  // @@protoc_insertion_point(field_get:VehicleInertialState.vehicle_id)
  return vehicle_id_;
}
inline void VehicleInertialState::set_vehicle_id(::google::protobuf::uint32 value) {
  
  vehicle_id_ = value;
  // @@protoc_insertion_point(field_set:VehicleInertialState.vehicle_id)
}

// float longitude = 2;
inline void VehicleInertialState::clear_longitude() {
  longitude_ = 0;
}
inline float VehicleInertialState::longitude() const {
  // @@protoc_insertion_point(field_get:VehicleInertialState.longitude)
  return longitude_;
}
inline void VehicleInertialState::set_longitude(float value) {
  
  longitude_ = value;
  // @@protoc_insertion_point(field_set:VehicleInertialState.longitude)
}

// float latitude = 3;
inline void VehicleInertialState::clear_latitude() {
  latitude_ = 0;
}
inline float VehicleInertialState::latitude() const {
  // @@protoc_insertion_point(field_get:VehicleInertialState.latitude)
  return latitude_;
}
inline void VehicleInertialState::set_latitude(float value) {
  
  latitude_ = value;
  // @@protoc_insertion_point(field_set:VehicleInertialState.latitude)
}

// float altitude = 4;
inline void VehicleInertialState::clear_altitude() {
  altitude_ = 0;
}
inline float VehicleInertialState::altitude() const {
  // @@protoc_insertion_point(field_get:VehicleInertialState.altitude)
  return altitude_;
}
inline void VehicleInertialState::set_altitude(float value) {
  
  altitude_ = value;
  // @@protoc_insertion_point(field_set:VehicleInertialState.altitude)
}

// float roll = 5;
inline void VehicleInertialState::clear_roll() {
  roll_ = 0;
}
inline float VehicleInertialState::roll() const {
  // @@protoc_insertion_point(field_get:VehicleInertialState.roll)
  return roll_;
}
inline void VehicleInertialState::set_roll(float value) {
  
  roll_ = value;
  // @@protoc_insertion_point(field_set:VehicleInertialState.roll)
}

// float pitch = 6;
inline void VehicleInertialState::clear_pitch() {
  pitch_ = 0;
}
inline float VehicleInertialState::pitch() const {
  // @@protoc_insertion_point(field_get:VehicleInertialState.pitch)
  return pitch_;
}
inline void VehicleInertialState::set_pitch(float value) {
  
  pitch_ = value;
  // @@protoc_insertion_point(field_set:VehicleInertialState.pitch)
}

// float heading = 7;
inline void VehicleInertialState::clear_heading() {
  heading_ = 0;
}
inline float VehicleInertialState::heading() const {
  // @@protoc_insertion_point(field_get:VehicleInertialState.heading)
  return heading_;
}
inline void VehicleInertialState::set_heading(float value) {
  
  heading_ = value;
  // @@protoc_insertion_point(field_set:VehicleInertialState.heading)
}

// float north_speed = 8;
inline void VehicleInertialState::clear_north_speed() {
  north_speed_ = 0;
}
inline float VehicleInertialState::north_speed() const {
  // @@protoc_insertion_point(field_get:VehicleInertialState.north_speed)
  return north_speed_;
}
inline void VehicleInertialState::set_north_speed(float value) {
  
  north_speed_ = value;
  // @@protoc_insertion_point(field_set:VehicleInertialState.north_speed)
}

// float east_speed = 9;
inline void VehicleInertialState::clear_east_speed() {
  east_speed_ = 0;
}
inline float VehicleInertialState::east_speed() const {
  // @@protoc_insertion_point(field_get:VehicleInertialState.east_speed)
  return east_speed_;
}
inline void VehicleInertialState::set_east_speed(float value) {
  
  east_speed_ = value;
  // @@protoc_insertion_point(field_set:VehicleInertialState.east_speed)
}

// float vertical_speed = 10;
inline void VehicleInertialState::clear_vertical_speed() {
  vertical_speed_ = 0;
}
inline float VehicleInertialState::vertical_speed() const {
  // @@protoc_insertion_point(field_get:VehicleInertialState.vertical_speed)
  return vertical_speed_;
}
inline void VehicleInertialState::set_vertical_speed(float value) {
  
  vertical_speed_ = value;
  // @@protoc_insertion_point(field_set:VehicleInertialState.vertical_speed)
}

// float roll_rate = 11;
inline void VehicleInertialState::clear_roll_rate() {
  roll_rate_ = 0;
}
inline float VehicleInertialState::roll_rate() const {
  // @@protoc_insertion_point(field_get:VehicleInertialState.roll_rate)
  return roll_rate_;
}
inline void VehicleInertialState::set_roll_rate(float value) {
  
  roll_rate_ = value;
  // @@protoc_insertion_point(field_set:VehicleInertialState.roll_rate)
}

// float pitch_rate = 12;
inline void VehicleInertialState::clear_pitch_rate() {
  pitch_rate_ = 0;
}
inline float VehicleInertialState::pitch_rate() const {
  // @@protoc_insertion_point(field_get:VehicleInertialState.pitch_rate)
  return pitch_rate_;
}
inline void VehicleInertialState::set_pitch_rate(float value) {
  
  pitch_rate_ = value;
  // @@protoc_insertion_point(field_set:VehicleInertialState.pitch_rate)
}

// float yaw_rate = 13;
inline void VehicleInertialState::clear_yaw_rate() {
  yaw_rate_ = 0;
}
inline float VehicleInertialState::yaw_rate() const {
  // @@protoc_insertion_point(field_get:VehicleInertialState.yaw_rate)
  return yaw_rate_;
}
inline void VehicleInertialState::set_yaw_rate(float value) {
  
  yaw_rate_ = value;
  // @@protoc_insertion_point(field_set:VehicleInertialState.yaw_rate)
}

// float north_accel = 14;
inline void VehicleInertialState::clear_north_accel() {
  north_accel_ = 0;
}
inline float VehicleInertialState::north_accel() const {
  // @@protoc_insertion_point(field_get:VehicleInertialState.north_accel)
  return north_accel_;
}
inline void VehicleInertialState::set_north_accel(float value) {
  
  north_accel_ = value;
  // @@protoc_insertion_point(field_set:VehicleInertialState.north_accel)
}

// float east_accel = 15;
inline void VehicleInertialState::clear_east_accel() {
  east_accel_ = 0;
}
inline float VehicleInertialState::east_accel() const {
  // @@protoc_insertion_point(field_get:VehicleInertialState.east_accel)
  return east_accel_;
}
inline void VehicleInertialState::set_east_accel(float value) {
  
  east_accel_ = value;
  // @@protoc_insertion_point(field_set:VehicleInertialState.east_accel)
}

// float vertical_accel = 16;
inline void VehicleInertialState::clear_vertical_accel() {
  vertical_accel_ = 0;
}
inline float VehicleInertialState::vertical_accel() const {
  // @@protoc_insertion_point(field_get:VehicleInertialState.vertical_accel)
  return vertical_accel_;
}
inline void VehicleInertialState::set_vertical_accel(float value) {
  
  vertical_accel_ = value;
  // @@protoc_insertion_point(field_set:VehicleInertialState.vertical_accel)
}

// -------------------------------------------------------------------

// VehicleModeCommand

// uint32 vehicle_id = 1;
inline void VehicleModeCommand::clear_vehicle_id() {
  vehicle_id_ = 0u;
}
inline ::google::protobuf::uint32 VehicleModeCommand::vehicle_id() const {
  // @@protoc_insertion_point(field_get:VehicleModeCommand.vehicle_id)
  return vehicle_id_;
}
inline void VehicleModeCommand::set_vehicle_id(::google::protobuf::uint32 value) {
  
  vehicle_id_ = value;
  // @@protoc_insertion_point(field_set:VehicleModeCommand.vehicle_id)
}

// uint32 vehicle_mode = 2;
inline void VehicleModeCommand::clear_vehicle_mode() {
  vehicle_mode_ = 0u;
}
inline ::google::protobuf::uint32 VehicleModeCommand::vehicle_mode() const {
  // @@protoc_insertion_point(field_get:VehicleModeCommand.vehicle_mode)
  return vehicle_mode_;
}
inline void VehicleModeCommand::set_vehicle_mode(::google::protobuf::uint32 value) {
  
  vehicle_mode_ = value;
  // @@protoc_insertion_point(field_set:VehicleModeCommand.vehicle_mode)
}

// -------------------------------------------------------------------

// VehicleSystemStatus

// uint32 vehicle_id = 1;
inline void VehicleSystemStatus::clear_vehicle_id() {
  vehicle_id_ = 0u;
}
inline ::google::protobuf::uint32 VehicleSystemStatus::vehicle_id() const {
  // @@protoc_insertion_point(field_get:VehicleSystemStatus.vehicle_id)
  return vehicle_id_;
}
inline void VehicleSystemStatus::set_vehicle_id(::google::protobuf::uint32 value) {
  
  vehicle_id_ = value;
  // @@protoc_insertion_point(field_set:VehicleSystemStatus.vehicle_id)
}

// uint32 vehicle_mode = 2;
inline void VehicleSystemStatus::clear_vehicle_mode() {
  vehicle_mode_ = 0u;
}
inline ::google::protobuf::uint32 VehicleSystemStatus::vehicle_mode() const {
  // @@protoc_insertion_point(field_get:VehicleSystemStatus.vehicle_mode)
  return vehicle_mode_;
}
inline void VehicleSystemStatus::set_vehicle_mode(::google::protobuf::uint32 value) {
  
  vehicle_mode_ = value;
  // @@protoc_insertion_point(field_set:VehicleSystemStatus.vehicle_mode)
}

// uint32 vehicle_state = 3;
inline void VehicleSystemStatus::clear_vehicle_state() {
  vehicle_state_ = 0u;
}
inline ::google::protobuf::uint32 VehicleSystemStatus::vehicle_state() const {
  // @@protoc_insertion_point(field_get:VehicleSystemStatus.vehicle_state)
  return vehicle_state_;
}
inline void VehicleSystemStatus::set_vehicle_state(::google::protobuf::uint32 value) {
  
  vehicle_state_ = value;
  // @@protoc_insertion_point(field_set:VehicleSystemStatus.vehicle_state)
}

// -------------------------------------------------------------------

// VehicleTelemetryCommand

// uint32 vehicle_id = 1;
inline void VehicleTelemetryCommand::clear_vehicle_id() {
  vehicle_id_ = 0u;
}
inline ::google::protobuf::uint32 VehicleTelemetryCommand::vehicle_id() const {
  // @@protoc_insertion_point(field_get:VehicleTelemetryCommand.vehicle_id)
  return vehicle_id_;
}
inline void VehicleTelemetryCommand::set_vehicle_id(::google::protobuf::uint32 value) {
  
  vehicle_id_ = value;
  // @@protoc_insertion_point(field_set:VehicleTelemetryCommand.vehicle_id)
}

// uint32 telemetry_select = 2;
inline void VehicleTelemetryCommand::clear_telemetry_select() {
  telemetry_select_ = 0u;
}
inline ::google::protobuf::uint32 VehicleTelemetryCommand::telemetry_select() const {
  // @@protoc_insertion_point(field_get:VehicleTelemetryCommand.telemetry_select)
  return telemetry_select_;
}
inline void VehicleTelemetryCommand::set_telemetry_select(::google::protobuf::uint32 value) {
  
  telemetry_select_ = value;
  // @@protoc_insertion_point(field_set:VehicleTelemetryCommand.telemetry_select)
}

// uint32 telemetry_rate = 3;
inline void VehicleTelemetryCommand::clear_telemetry_rate() {
  telemetry_rate_ = 0u;
}
inline ::google::protobuf::uint32 VehicleTelemetryCommand::telemetry_rate() const {
  // @@protoc_insertion_point(field_get:VehicleTelemetryCommand.telemetry_rate)
  return telemetry_rate_;
}
inline void VehicleTelemetryCommand::set_telemetry_rate(::google::protobuf::uint32 value) {
  
  telemetry_rate_ = value;
  // @@protoc_insertion_point(field_set:VehicleTelemetryCommand.telemetry_rate)
}

// -------------------------------------------------------------------

// VehicleTerminationCommand

// uint32 vehicle_id = 1;
inline void VehicleTerminationCommand::clear_vehicle_id() {
  vehicle_id_ = 0u;
}
inline ::google::protobuf::uint32 VehicleTerminationCommand::vehicle_id() const {
  // @@protoc_insertion_point(field_get:VehicleTerminationCommand.vehicle_id)
  return vehicle_id_;
}
inline void VehicleTerminationCommand::set_vehicle_id(::google::protobuf::uint32 value) {
  
  vehicle_id_ = value;
  // @@protoc_insertion_point(field_set:VehicleTerminationCommand.vehicle_id)
}

// uint32 termination_mode = 2;
inline void VehicleTerminationCommand::clear_termination_mode() {
  termination_mode_ = 0u;
}
inline ::google::protobuf::uint32 VehicleTerminationCommand::termination_mode() const {
  // @@protoc_insertion_point(field_get:VehicleTerminationCommand.termination_mode)
  return termination_mode_;
}
inline void VehicleTerminationCommand::set_termination_mode(::google::protobuf::uint32 value) {
  
  termination_mode_ = value;
  // @@protoc_insertion_point(field_set:VehicleTerminationCommand.termination_mode)
}

// -------------------------------------------------------------------

// VehicleWaypointCommand

// uint32 vehicle_id = 1;
inline void VehicleWaypointCommand::clear_vehicle_id() {
  vehicle_id_ = 0u;
}
inline ::google::protobuf::uint32 VehicleWaypointCommand::vehicle_id() const {
  // @@protoc_insertion_point(field_get:VehicleWaypointCommand.vehicle_id)
  return vehicle_id_;
}
inline void VehicleWaypointCommand::set_vehicle_id(::google::protobuf::uint32 value) {
  
  vehicle_id_ = value;
  // @@protoc_insertion_point(field_set:VehicleWaypointCommand.vehicle_id)
}

// float longitude = 2;
inline void VehicleWaypointCommand::clear_longitude() {
  longitude_ = 0;
}
inline float VehicleWaypointCommand::longitude() const {
  // @@protoc_insertion_point(field_get:VehicleWaypointCommand.longitude)
  return longitude_;
}
inline void VehicleWaypointCommand::set_longitude(float value) {
  
  longitude_ = value;
  // @@protoc_insertion_point(field_set:VehicleWaypointCommand.longitude)
}

// float latitude = 3;
inline void VehicleWaypointCommand::clear_latitude() {
  latitude_ = 0;
}
inline float VehicleWaypointCommand::latitude() const {
  // @@protoc_insertion_point(field_get:VehicleWaypointCommand.latitude)
  return latitude_;
}
inline void VehicleWaypointCommand::set_latitude(float value) {
  
  latitude_ = value;
  // @@protoc_insertion_point(field_set:VehicleWaypointCommand.latitude)
}

// float altitude = 4;
inline void VehicleWaypointCommand::clear_altitude() {
  altitude_ = 0;
}
inline float VehicleWaypointCommand::altitude() const {
  // @@protoc_insertion_point(field_get:VehicleWaypointCommand.altitude)
  return altitude_;
}
inline void VehicleWaypointCommand::set_altitude(float value) {
  
  altitude_ = value;
  // @@protoc_insertion_point(field_set:VehicleWaypointCommand.altitude)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ProtoPackets_2eproto__INCLUDED
